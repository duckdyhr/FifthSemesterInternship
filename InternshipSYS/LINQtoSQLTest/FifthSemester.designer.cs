#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQtoSQLTest
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FifthSemester")]
	public partial class FifthSemesterDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertSupervisor(Supervisor instance);
    partial void UpdateSupervisor(Supervisor instance);
    partial void DeleteSupervisor(Supervisor instance);
    partial void InsertYear(Year instance);
    partial void UpdateYear(Year instance);
    partial void DeleteYear(Year instance);
    partial void InsertOffering(Offering instance);
    partial void UpdateOffering(Offering instance);
    partial void DeleteOffering(Offering instance);
    partial void InsertMainProject(MainProject instance);
    partial void UpdateMainProject(MainProject instance);
    partial void DeleteMainProject(MainProject instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    #endregion
		
		public FifthSemesterDataContext() : 
				base(global::LINQtoSQLTest.Properties.Settings.Default.FifthSemesterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FifthSemesterDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FifthSemesterDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FifthSemesterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FifthSemesterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Supervisor> Supervisors
		{
			get
			{
				return this.GetTable<Supervisor>();
			}
		}
		
		public System.Data.Linq.Table<Year> Years
		{
			get
			{
				return this.GetTable<Year>();
			}
		}
		
		public System.Data.Linq.Table<Offering> Offerings
		{
			get
			{
				return this.GetTable<Offering>();
			}
		}
		
		public System.Data.Linq.Table<MainProject> MainProjects
		{
			get
			{
				return this.GetTable<MainProject>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _comments;
		
		private string _address;
		
		private string _name;
		
		private string _phone;
		
		private string _website;
		
		private System.Nullable<int> _zipcode;
		
		private int _id;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<Offering> _Offerings;
		
		private EntitySet<MainProject> _MainProjects;
		
		private EntitySet<Contact> _Contacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    partial void OnzipcodeChanging(System.Nullable<int> value);
    partial void OnzipcodeChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    #endregion
		
		public Company()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Offerings = new EntitySet<Offering>(new Action<Offering>(this.attach_Offerings), new Action<Offering>(this.detach_Offerings));
			this._MainProjects = new EntitySet<MainProject>(new Action<MainProject>(this.attach_MainProjects), new Action<MainProject>(this.detach_MainProjects));
			this._Contacts = new EntitySet<Contact>(new Action<Contact>(this.attach_Contacts), new Action<Contact>(this.detach_Contacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="VarChar(MAX)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(30)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="VarChar(40)")]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zipcode", DbType="Int")]
		public System.Nullable<int> zipcode
		{
			get
			{
				return this._zipcode;
			}
			set
			{
				if ((this._zipcode != value))
				{
					this.OnzipcodeChanging(value);
					this.SendPropertyChanging();
					this._zipcode = value;
					this.SendPropertyChanged("zipcode");
					this.OnzipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Student", Storage="_Students", ThisKey="id", OtherKey="CompanyID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Offering", Storage="_Offerings", ThisKey="id", OtherKey="CompanyID")]
		public EntitySet<Offering> Offerings
		{
			get
			{
				return this._Offerings;
			}
			set
			{
				this._Offerings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_MainProject", Storage="_MainProjects", ThisKey="id", OtherKey="CompanyID")]
		public EntitySet<MainProject> MainProjects
		{
			get
			{
				return this._MainProjects;
			}
			set
			{
				this._MainProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Contact", Storage="_Contacts", ThisKey="id", OtherKey="CompanyID")]
		public EntitySet<Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Offerings(Offering entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Offerings(Offering entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_MainProjects(MainProject entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_MainProjects(MainProject entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Contacts(Contact entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _comments;
		
		private string _class;
		
		private string _address;
		
		private System.Nullable<bool> _application;
		
		private System.Nullable<bool> _contract;
		
		private string _email;
		
		private System.Nullable<bool> _leaningobjectives;
		
		private string _name;
		
		private string _phone;
		
		private string _season;
		
		private System.Nullable<int> _year;
		
		private System.Nullable<int> _zipcode;
		
		private string _mainProjectTitle;
		
		private string _mainProjectDescription;
		
		private System.Nullable<int> _SupervisorID;
		
		private System.Nullable<int> _CompanyID;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Supervisor> _Supervisor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void OnclassChanging(string value);
    partial void OnclassChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnapplicationChanging(System.Nullable<bool> value);
    partial void OnapplicationChanged();
    partial void OncontractChanging(System.Nullable<bool> value);
    partial void OncontractChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnleaningobjectivesChanging(System.Nullable<bool> value);
    partial void OnleaningobjectivesChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnseasonChanging(string value);
    partial void OnseasonChanged();
    partial void OnyearChanging(System.Nullable<int> value);
    partial void OnyearChanged();
    partial void OnzipcodeChanging(System.Nullable<int> value);
    partial void OnzipcodeChanged();
    partial void OnmainProjectTitleChanging(string value);
    partial void OnmainProjectTitleChanged();
    partial void OnmainProjectDescriptionChanging(string value);
    partial void OnmainProjectDescriptionChanged();
    partial void OnSupervisorIDChanging(System.Nullable<int> value);
    partial void OnSupervisorIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public Student()
		{
			this._Company = default(EntityRef<Company>);
			this._Supervisor = default(EntityRef<Supervisor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="VarChar(MAX)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="class", Storage="_class", DbType="VarChar(10)")]
		public string @class
		{
			get
			{
				return this._class;
			}
			set
			{
				if ((this._class != value))
				{
					this.OnclassChanging(value);
					this.SendPropertyChanging();
					this._class = value;
					this.SendPropertyChanged("@class");
					this.OnclassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(40)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_application", DbType="Bit")]
		public System.Nullable<bool> application
		{
			get
			{
				return this._application;
			}
			set
			{
				if ((this._application != value))
				{
					this.OnapplicationChanging(value);
					this.SendPropertyChanging();
					this._application = value;
					this.SendPropertyChanged("application");
					this.OnapplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contract", DbType="Bit")]
		public System.Nullable<bool> contract
		{
			get
			{
				return this._contract;
			}
			set
			{
				if ((this._contract != value))
				{
					this.OncontractChanging(value);
					this.SendPropertyChanging();
					this._contract = value;
					this.SendPropertyChanged("contract");
					this.OncontractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(40)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leaningobjectives", DbType="Bit")]
		public System.Nullable<bool> leaningobjectives
		{
			get
			{
				return this._leaningobjectives;
			}
			set
			{
				if ((this._leaningobjectives != value))
				{
					this.OnleaningobjectivesChanging(value);
					this.SendPropertyChanging();
					this._leaningobjectives = value;
					this.SendPropertyChanged("leaningobjectives");
					this.OnleaningobjectivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_season", DbType="VarChar(6)")]
		public string season
		{
			get
			{
				return this._season;
			}
			set
			{
				if ((this._season != value))
				{
					this.OnseasonChanging(value);
					this.SendPropertyChanging();
					this._season = value;
					this.SendPropertyChanged("season");
					this.OnseasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int")]
		public System.Nullable<int> year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zipcode", DbType="Int")]
		public System.Nullable<int> zipcode
		{
			get
			{
				return this._zipcode;
			}
			set
			{
				if ((this._zipcode != value))
				{
					this.OnzipcodeChanging(value);
					this.SendPropertyChanging();
					this._zipcode = value;
					this.SendPropertyChanged("zipcode");
					this.OnzipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mainProjectTitle", DbType="VarChar(55)")]
		public string mainProjectTitle
		{
			get
			{
				return this._mainProjectTitle;
			}
			set
			{
				if ((this._mainProjectTitle != value))
				{
					this.OnmainProjectTitleChanging(value);
					this.SendPropertyChanging();
					this._mainProjectTitle = value;
					this.SendPropertyChanged("mainProjectTitle");
					this.OnmainProjectTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mainProjectDescription", DbType="VarChar(MAX)")]
		public string mainProjectDescription
		{
			get
			{
				return this._mainProjectDescription;
			}
			set
			{
				if ((this._mainProjectDescription != value))
				{
					this.OnmainProjectDescriptionChanging(value);
					this.SendPropertyChanging();
					this._mainProjectDescription = value;
					this.SendPropertyChanged("mainProjectDescription");
					this.OnmainProjectDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorID", DbType="Int")]
		public System.Nullable<int> SupervisorID
		{
			get
			{
				return this._SupervisorID;
			}
			set
			{
				if ((this._SupervisorID != value))
				{
					if (this._Supervisor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupervisorIDChanging(value);
					this.SendPropertyChanging();
					this._SupervisorID = value;
					this.SendPropertyChanged("SupervisorID");
					this.OnSupervisorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Student", Storage="_Company", ThisKey="CompanyID", OtherKey="id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._CompanyID = value.id;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Student", Storage="_Supervisor", ThisKey="SupervisorID", OtherKey="id", IsForeignKey=true)]
		public Supervisor Supervisor
		{
			get
			{
				return this._Supervisor.Entity;
			}
			set
			{
				Supervisor previousValue = this._Supervisor.Entity;
				if (((previousValue != value) 
							|| (this._Supervisor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisor.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Supervisor.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._SupervisorID = value.id;
					}
					else
					{
						this._SupervisorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supervisor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supervisor")]
	public partial class Supervisor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _email;
		
		private string _name;
		
		private string _office;
		
		private string _phone;
		
		private EntitySet<Student> _Students;
		
		private EntitySet<MainProject> _MainProjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnofficeChanging(string value);
    partial void OnofficeChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public Supervisor()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._MainProjects = new EntitySet<MainProject>(new Action<MainProject>(this.attach_MainProjects), new Action<MainProject>(this.detach_MainProjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(40)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_office", DbType="VarChar(10)")]
		public string office
		{
			get
			{
				return this._office;
			}
			set
			{
				if ((this._office != value))
				{
					this.OnofficeChanging(value);
					this.SendPropertyChanging();
					this._office = value;
					this.SendPropertyChanged("office");
					this.OnofficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Student", Storage="_Students", ThisKey="id", OtherKey="SupervisorID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_MainProject", Storage="_MainProjects", ThisKey="id", OtherKey="SupervisorID")]
		public EntitySet<MainProject> MainProjects
		{
			get
			{
				return this._MainProjects;
			}
			set
			{
				this._MainProjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor = null;
		}
		
		private void attach_MainProjects(MainProject entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor = this;
		}
		
		private void detach_MainProjects(MainProject entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Year")]
	public partial class Year : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvalueChanging(int value);
    partial void OnvalueChanged();
    #endregion
		
		public Year()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Offering")]
	public partial class Offering : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _year;
		
		private string _season;
		
		private System.Nullable<int> _offeringNumber;
		
		private System.Nullable<int> _CompanyID;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnyearChanging(System.Nullable<int> value);
    partial void OnyearChanged();
    partial void OnseasonChanging(string value);
    partial void OnseasonChanged();
    partial void OnofferingNumberChanging(System.Nullable<int> value);
    partial void OnofferingNumberChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public Offering()
		{
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int")]
		public System.Nullable<int> year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_season", DbType="VarChar(6)")]
		public string season
		{
			get
			{
				return this._season;
			}
			set
			{
				if ((this._season != value))
				{
					this.OnseasonChanging(value);
					this.SendPropertyChanging();
					this._season = value;
					this.SendPropertyChanged("season");
					this.OnseasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_offeringNumber", DbType="Int")]
		public System.Nullable<int> offeringNumber
		{
			get
			{
				return this._offeringNumber;
			}
			set
			{
				if ((this._offeringNumber != value))
				{
					this.OnofferingNumberChanging(value);
					this.SendPropertyChanging();
					this._offeringNumber = value;
					this.SendPropertyChanged("offeringNumber");
					this.OnofferingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Offering", Storage="_Company", ThisKey="CompanyID", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Offerings.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Offerings.Add(this);
						this._CompanyID = value.id;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MainProject")]
	public partial class MainProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _comments;
		
		private string _title;
		
		private System.Nullable<short> _groupNo;
		
		private string _season;
		
		private System.Nullable<int> _year;
		
		private System.Nullable<int> _SupervisorID;
		
		private System.Nullable<int> _CompanyID;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Supervisor> _Supervisor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OngroupNoChanging(System.Nullable<short> value);
    partial void OngroupNoChanged();
    partial void OnseasonChanging(string value);
    partial void OnseasonChanged();
    partial void OnyearChanging(System.Nullable<int> value);
    partial void OnyearChanged();
    partial void OnSupervisorIDChanging(System.Nullable<int> value);
    partial void OnSupervisorIDChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public MainProject()
		{
			this._Company = default(EntityRef<Company>);
			this._Supervisor = default(EntityRef<Supervisor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="VarChar(MAX)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(55)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupNo", DbType="SmallInt")]
		public System.Nullable<short> groupNo
		{
			get
			{
				return this._groupNo;
			}
			set
			{
				if ((this._groupNo != value))
				{
					this.OngroupNoChanging(value);
					this.SendPropertyChanging();
					this._groupNo = value;
					this.SendPropertyChanged("groupNo");
					this.OngroupNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_season", DbType="VarChar(6)")]
		public string season
		{
			get
			{
				return this._season;
			}
			set
			{
				if ((this._season != value))
				{
					this.OnseasonChanging(value);
					this.SendPropertyChanging();
					this._season = value;
					this.SendPropertyChanged("season");
					this.OnseasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int")]
		public System.Nullable<int> year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupervisorID", DbType="Int")]
		public System.Nullable<int> SupervisorID
		{
			get
			{
				return this._SupervisorID;
			}
			set
			{
				if ((this._SupervisorID != value))
				{
					if (this._Supervisor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupervisorIDChanging(value);
					this.SendPropertyChanging();
					this._SupervisorID = value;
					this.SendPropertyChanged("SupervisorID");
					this.OnSupervisorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_MainProject", Storage="_Company", ThisKey="CompanyID", OtherKey="id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.MainProjects.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.MainProjects.Add(this);
						this._CompanyID = value.id;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_MainProject", Storage="_Supervisor", ThisKey="SupervisorID", OtherKey="id", IsForeignKey=true)]
		public Supervisor Supervisor
		{
			get
			{
				return this._Supervisor.Entity;
			}
			set
			{
				Supervisor previousValue = this._Supervisor.Entity;
				if (((previousValue != value) 
							|| (this._Supervisor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisor.Entity = null;
						previousValue.MainProjects.Remove(this);
					}
					this._Supervisor.Entity = value;
					if ((value != null))
					{
						value.MainProjects.Add(this);
						this._SupervisorID = value.id;
					}
					else
					{
						this._SupervisorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supervisor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private string _phone;
		
		private string _email;
		
		private int _id;
		
		private System.Nullable<int> _CompanyID;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnCompanyIDChanging(System.Nullable<int> value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public Contact()
		{
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(40)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int")]
		public System.Nullable<int> CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Contact", Storage="_Company", ThisKey="CompanyID", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Contacts.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Contacts.Add(this);
						this._CompanyID = value.id;
					}
					else
					{
						this._CompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
